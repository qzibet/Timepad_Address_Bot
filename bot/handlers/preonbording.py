import os
from datetime import date

from django.conf import settings
from django.core.exceptions import ObjectDoesNotExist
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes
from asgiref.sync import sync_to_async
import logging

from bot.handlers import day_of_work
from bot.handlers.conversations_states import DAY_1, DAY_2
from bot.handlers.day_of_work import block_0
from bot.models import TelegramUser, Code

logger = logging.getLogger(__name__)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_name = update.effective_user.username or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    chat_id = update.effective_chat.id
    user = await sync_to_async(TelegramUser.objects.filter(chat_id=chat_id).first)()

    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –¥—Ä—É–≥ *–¢–∞–π–º–ø–∞–¥—Ä–µ—Å-–±–æ—Ç*! –†–∞–¥—ã, —á—Ç–æ —Ç—ã —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ "
        "—Å—Ç–∞–Ω–µ—à—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –¢–∞–π–º–ø–∞–¥! –Ø –≤–º–µ—Å—Ç–µ —Å–æ —Å–≤–æ–µ–π –ø–æ–º–æ—â–Ω–∏—Ü–µ–π "
        "*–¢–∞–π–º–∏–∫–æ–π* –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –ø—Ä–æ–π—Ç–∏ —ç—Ç–æ—Ç –ø—É—Ç—å –ª–µ–≥–∫–æ.\n\n"
        "–ï—Å–ª–∏ —è —Å–ª–æ–º–∞—é—Å—å –∏–ª–∏ —É –º–µ–Ω—è –æ—Ç–≤–∞–ª—è—Ç—Å—è –∫–∞–∫–∏–µ-—Ç–æ –≤–∏–Ω—Ç–∏–∫–∏, —Ç–æ –æ–±—Ä–∞—Ç–∏—Å—å "
        "–∫ –Ω–∞—à–µ–º—É *–ú–∞—Å—Ç–µ—Ä—É –í–∏–Ω—Ç–∏–∫–æ–≤* (–∫–Ω–æ–ø–∫–∞ –≤ –º–µ–Ω—é - –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞) üôå\n\n"
        "*P.S.*–ï—Å–ª–∏ —Ç–µ–±–µ –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ç—ã –Ω–µ –≤–∏–¥–∏—à—å –∫–Ω–æ–ø–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ, "
        "–∏—â–∏ –µ—ë –≤ —Å—Ç—Ä–æ–∫–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π. –°–ø—Ä–∞–≤–∞ –±—É–¥–µ—Ç –∑–Ω–∞–∫, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ –ø—É–≥–æ–≤–∏—Ü—É "
        "\"üî¢\" - –∫–Ω–æ–ø–∫–∏ –ø—Ä—è—á—É—Ç—Å—è —Ç–∞–º!"
    )

    welcome_back_text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –¥—Ä—É–≥ *–¢–∞–π–º–ø–∞–¥—Ä–µ—Å-–±–æ—Ç*! –†–∞–¥—ã, —á—Ç–æ —Ç—ã —Å–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ "
        "—Å—Ç–∞–Ω–µ—à—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –¢–∞–π–º–ø–∞–¥! –Ø –≤–º–µ—Å—Ç–µ —Å–æ —Å–≤–æ–µ–π –ø–æ–º–æ—â–Ω–∏—Ü–µ–π "
        "*–¢–∞–π–º–∏–∫–æ–π* –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –ø—Ä–æ–π—Ç–∏ —ç—Ç–æ—Ç –ø—É—Ç—å –ª–µ–≥–∫–æ.\n\n"
        "–ï—Å–ª–∏ —è —Å–ª–æ–º–∞—é—Å—å –∏–ª–∏ —É –º–µ–Ω—è –æ—Ç–≤–∞–ª—è—Ç—Å—è –∫–∞–∫–∏–µ-—Ç–æ –≤–∏–Ω—Ç–∏–∫–∏, —Ç–æ –æ–±—Ä–∞—Ç–∏—Å—å "
        "–∫ –Ω–∞—à–µ–º—É *–ú–∞—Å—Ç–µ—Ä—É –í–∏–Ω—Ç–∏–∫–æ–≤* (–∫–Ω–æ–ø–∫–∞ –≤ –º–µ–Ω—é - –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞) üôå\n\n"
        "*P.S.*–ï—Å–ª–∏ —Ç–µ–±–µ –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ç—ã –Ω–µ –≤–∏–¥–∏—à—å –∫–Ω–æ–ø–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ, "
        "–∏—â–∏ –µ—ë –≤ —Å—Ç—Ä–æ–∫–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π. –°–ø—Ä–∞–≤–∞ –±—É–¥–µ—Ç –∑–Ω–∞–∫, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ –ø—É–≥–æ–≤–∏—Ü—É "
        "\"üî¢\" - –∫–Ω–æ–ø–∫–∏ –ø—Ä—è—á—É—Ç—Å—è —Ç–∞–º!"
    )
    if not user:
        await save_user(user_name, chat_id)
        text = welcome_text
        next_state = DAY_1[0]
    else:
        code = await sync_to_async(Code.objects.filter(user=user).first)()

        if not code:
            text = welcome_text
            next_state = DAY_1[0]
        else:
            text = welcome_back_text
            next_state = DAY_1[2]

    photo_url = os.path.join(settings.MEDIA_ROOT, "hellosticker.webp")

    button = KeyboardButton("–Æ—Ö—É—É, –ø–æ–≥–Ω–∞–ª–∏")
    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_sticker(
        sticker=open(photo_url, 'rb'),
    )
    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )

    return next_state


@sync_to_async
def save_user(user_name, chat_id):
    try:
        user, created = TelegramUser.objects.get_or_create(
            username=user_name, chat_id=chat_id
        )
        if not created:
            user.chat_id = chat_id
            user.save()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")


@sync_to_async
def get_code_entry(code):
    return Code.objects.get(code=code)


@sync_to_async
def get_or_create_telegram_user(user_id):
    return TelegramUser.objects.get_or_create(chat_id=user_id)


@sync_to_async
def save_code_entry(code_entry):
    code_entry.save()


@sync_to_async
def get_user_chat_id(user):
    return user.chat_id if user else None


async def ask_for_code(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –ø—Ä–∏—Å–ª–∞–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:"
    )
    return DAY_1[1]


async def request_access_code(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_message = update.message.text.strip()

    try:
        code_entry = await get_code_entry(user_message)
        if code_entry.user:
            telegram_user, created = await get_or_create_telegram_user(user_id)
            code_entry.user = telegram_user
            await save_code_entry(code_entry)
            return DAY_1[2]
            await update.message.reply_text(
                "–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω, –¥–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!"
            )
            return DAY_1[2]
        else:
            telegram_user, created = await get_or_create_telegram_user(user_id)
            code_entry.user = telegram_user
            await save_code_entry(code_entry)
            return DAY_1[2]

    except ObjectDoesNotExist:
        await update.message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞!")
    except Exception as e:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        return DAY_1[2]


async def request_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user = await sync_to_async(
        TelegramUser.objects.filter(
            chat_id=user_id
        ).first)()
    code = await sync_to_async(
        Code.objects.filter(
            user=user
        ).first)()
    text = "–ö–∞–∫ —è –º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?"
    button = ReplyKeyboardRemove()
    if code.start_date <= date.today():
        late_message = (
            "–Ø –∂–¥–∞–ª —Ç–µ–±—è –ø–∞—Ä—É –¥–Ω–µ–π –Ω–∞–∑–∞–¥ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –∫–æ–Ω—Ç–µ–Ω—Ç –µ—â–µ –¥–æ —Ç–≤–æ–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è. "
            "–ü—Ä–æ—á–∏—Ç–∞–π –µ–≥–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–µ–π—á–∞—Å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –≤–∞–∂–Ω—ã–π!"
        )
        text = f"{late_message}\n\n{text}"
    else:
        next_state = DAY_1[0]

    await update.message.reply_text(text=text, reply_markup=button)
    return DAY_1[3]


async def save_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    name = update.message.text
    chat_id = update.message.chat_id
    await update_user_name(chat_id, name)

    text = (
        "–ó–¥–æ—Ä–æ–≤–æ! –ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å —Ç–æ–±–æ–π –ø–æ–±–ª–∏–∂–µ üòâ\n\n"
        "–ó–∞–ø–æ–ª–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, [–∞–Ω–∫–µ—Ç—É](https://docs.google.com/forms/d/e/1FAIpQLSdN7S7zLi6y6iuWiA-xcnX2K0AqnPk_o-6yXVCdauIjyxnp2w/viewform)\n\n"
        "(–¥–µ–ª–∞–π –¢–´–ö –Ω–∞ —Å–ª–æ–≤–æ –∞–Ω–∫–µ—Ç–∞) \n\n"
        "*P.S.* –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–π–¥–µ—à—å –∞–Ω–∫–µ—Ç—É, —Å–Ω–æ–≤–∞ –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∫–æ –º–Ω–µ –≤ –±–æ—Ç –∏ –Ω–∞–∂–∏–º–∞–π \"–í—Å—ë –≥–æ—Ç–æ–≤–æ\".\n\n"
        "*P.P.S.* –ù–µ –ø—É–≥–∞–π—Å—è, –µ—Å–ª–∏ –Ω–µ —É–≤–∏–¥–∏—à—å –ø–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—é –∫–Ω–æ–ø–∫—É - –æ–Ω–∞ —Å–ø—Ä—è—Ç–∞–ª–∞—Å—å –≤ –º–µ–Ω—é —Ä—è–¥–æ–º —Å –ø–æ–ª–µ–º –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π."
    )

    button = KeyboardButton("–í—Å—ë –≥–æ—Ç–æ–≤–æ!")
    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_text(
        text,
        parse_mode="Markdown",
        disable_web_page_preview=True,
        reply_markup=keyboard
    )
    return DAY_1[4]


@sync_to_async
def update_user_name(chat_id, name):
    from bot.models import TelegramUser  # –∏–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–∏
    try:
        user = TelegramUser.objects.get(chat_id=chat_id)
        user.name = name
        user.save()
    except TelegramUser.DoesNotExist:
        logger.error(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å chat_id {chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")


async def block_5(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ö—Ä—É—Ç–æ! –ê —Ç–µ–ø–µ—Ä—å –Ω–µ–º–Ω–æ–æ–æ–æ–æ–∂–∫–æ –±—é—Ä–æ–∫—Ä–∞—Ç–∏–∏ –æ—Ç –Ω–∞—Å: \n\n"
        "–û—Ç–ø—Ä–∞–≤—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ä–∞–∑—É –Ω–∞ –æ–±–∞ –ø–æ—á—Ç–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è (–î–∞-–¥–∞, —É –Ω–∞—Å –≤—Å–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ! "
        "–ù–∏–∫–∞–∫–∏—Ö —Å–µ—Ä—ã—Ö –∏–ª–∏ —á–µ—Ä–Ω—ã—Ö –∫–æ–Ω–≤–µ—Ä—Ç–æ–≤ üòÅ)\n\n"
        "*a.saukhina@timepad.ru* \n\n"
        "*y.volodina@timepad.ru* \n\n"
        "*–ò–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤—ã—Å–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—ã –∏–ª–∏ —Å–∫–∞–Ω—ã/—Ñ–æ—Ç–æ (–≤—Å–µ, —á—Ç–æ –µ—Å—Ç—å —Å–µ–π—á–∞—Å):*\n\n"
        "- –ü–∞—Å–ø–æ—Ä—Ç (1 –∏ 2 —Å—Ç—Ä);\n\n"
        "- –¢—Ä—É–¥–æ–≤—É—é –∫–Ω–∏–∂–∫—É –∏–ª–∏ —Å–≤–µ–¥–µ–Ω–∏—è –æ —Ç—Ä—É–¥–æ–≤–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–∫–∞–∫ —Ä–∞–∑ —Ç—É —Å–∞–º—É—é –≤—ã–ø–∏—Å–∫—É –∏–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π "
        "—Ç—Ä—É–¥–æ–≤–æ–π –∫–Ω–∏–∂–∫–∏) –≤ —Ñ–æ—Ä–º–µ –°–¢–î-–† (–µ—Å–ª–∏ —Ç—ã  —É—Å—Ç—Ä–∞–∏–≤–∞–µ—à—å—Å—è –≤–ø–µ—Ä–≤—ã–µ –Ω–∞ —Ä–∞–±–æ—Ç—É, —Ç–æ —Ç–µ–±–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ–¥—É—Ç "
        "—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é —Ç—Ä—É–¥–æ–≤—É—é –∫–Ω–∏–∂–∫—É);\n\n"
        "- –°–ù–ò–õ–°;\n\n"
        "- –ò–ù–ù;\n\n"
        "- –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã (–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –¢-–ë–∞–Ω–∫).\n\n"
        "*–í —Ç–µ–º–µ –ø–∏—Å—å–º–∞ –Ω–∞–ø–∏—Å–∞—Ç—å:* –§–ò–û\\_—Ç–≤–æ—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å\\_–¥–æ–∫—É–º–µ–Ω—Ç—ã"
    )
    keyboard = ReplyKeyboardMarkup(
        [["–§—É—Ö, —Å–¥–µ–ª–∞–Ω–æ! üí™"]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )

    return DAY_1[5]


async def block_6(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–£—Ä–∞! –ü–µ—Ä–≤—ã–π —ç—Ç–∞–ø –ø—Ä–µ–æ–¥–æ–ª–µ–Ω. –î–∞–ª—å—à–µ —Ç–µ–±—è –∂–¥—É—Ç –∫–ª–∞—Å—Å–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏ —Å –∫–æ–º–∞–Ω–¥–æ–π, "
        "–ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ –ø—Ä–æ–¥—É–∫—Ç –∏ –º–µ–º–∞—Å—ã!"
    )
    button_1 = KeyboardButton("ü•≥")
    button_2 = KeyboardButton("ü•∞")
    button_3 = KeyboardButton("üëç")

    keyboard = ReplyKeyboardMarkup(
        [[button_1, button_2, button_3]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )

    return DAY_1[6]


async def block_7(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        '–õ–æ–≤–∏ –Ω–∞—à [—Å—Ç–∏–∫–µ—Ä-–ø–∞–∫](https://t.me/addstickers/timepadres)! \n\n'
        '–ò —á–∏—Ç–∞–π –∏—Å—Ç–æ—Ä–∏—é –∏—Ö —Å–æ–∑–¥–∞–Ω–∏—è üòâ'
    )

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        disable_web_page_preview=True
    )

    # document_url = "https://s604vla.storage.yandex.net/rdisk/836e6d5a86ddb541ade405f938f5cc549f99ee03d3ea3a22afffe75135034779/672c38cf/MM8Im2FXnMYzmVy63dTdDHjYfQuQmLs1A96lQqEXlb0bs7C_aNanj0mF_gRhxM_8taQd9GC_w8tfazEX5li6QQ==?uid=0&filename=%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F_%D0%A1%D1%82%D0%B8%D0%BA%D0%B5%D1%80%D0%BF%D0%B0%D0%BA%D0%B0.pdf&disposition=attachment&hash=MV%2F8f%2FpP4VsWGP6Wj8m8WTgaAVnuxMX0HzIhPb6YjATxI2915oCVC5b1QdqR4kPrG7pWpVQYsubyrcajHimPFw%3D%3D&limit=0&content_type=application%2Fpdf&owner_uid=1130000064556865&fsize=4866463&hid=9c2b58a1908ba469c48366b0225eddcd&media_type=document&tknv=v2&ts=6264a85d491c0&s=1df1e7318d6ec5dbdbf0fb583f71dd5f4c4f582aaa8f85246c707dd6ff14bf27&pb=U2FsdGVkX18_jJDXO_tK2_RICA_C-7vx2DBiVMgx4oxmxIvqoFO9d-Fye6V0eXCpN92UsUouH8J4RSIl7MnONO86z13GbKXiwMy999pyxcM"  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
    button = KeyboardButton("–°–ø–∞—Å–∏–±–æ ‚ù§Ô∏è")
    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    document_url = os.path.join(settings.MEDIA_ROOT, "–ò—Å—Ç–æ—Ä–∏—è_–°—Ç–∏–∫–µ—Ä–ø–∞–∫–∞.pdf")
    message = await update.message.reply_document(
        document="BQACAgIAAxkDAAITK2c1IbY1QkGSM7kqoeMhF-JsxflHAAL6YAACioSpSdRADa5NyBAkNgQ",
        filename="–ò—Å—Ç–æ—Ä–∏—è_–°—Ç–∏–∫–µ—Ä–ø–∞–∫–∞.pdf",
        reply_markup=keyboard,
        connect_timeout=120,
        read_timeout=120,
        write_timeout=120,
        pool_timeout=120
    )

    document_id = message.document.file_id
    print(f"Document ID: {document_id}")

    return DAY_1[7]


async def block_8(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ñ–¥—ë–º —Ç–µ–±—è –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –≤ –Ω–∞—à–µ–º *–æ—Ñ–∏—Å–µ - –µ—Å–ª–∏ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –∏–∑ –ú–æ—Å–∫–≤—ã*, "
        "–∞ –µ—Å–ª–∏ *—É–¥–∞–ª–µ–Ω–Ω–æ - –ø—Ä–∏—à–ª–µ–º —Ç–µ–±–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∑—É–º!*"
    )
    office_button = "–Ø –ø—Ä–∏–¥—É –≤ –æ—Ñ–∏—Å!"
    freelance_button = "–Ø —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫!"
    keyboard = ReplyKeyboardMarkup(
        [[office_button, freelance_button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )

    return DAY_1[8]


async def block_9(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    response = update.message.text

    try:
        user = await sync_to_async(TelegramUser.objects.get)(chat_id=chat_id)
    except TelegramUser.DoesNotExist:
        return
    print(response)
    if response == '–Ø –ø—Ä–∏–¥—É –≤ –æ—Ñ–∏—Å!':
        user.work_type = '–û—Ñ–∏—Å'
    elif response == '–Ø —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫!':
        user.work_type = '–£–¥–∞–ª–µ–Ω–∫–∞'

    if user.work_type:
        await sync_to_async(user.save)()
    # –ü–æ–ª—É—á–∞–µ–º chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    chat_id = update.message.chat_id
    user = await sync_to_async(TelegramUser.objects.get)(chat_id=chat_id)
    button = "–°—É–ø–µ—Ä! –í—Å–µ –ø–æ–Ω—è—Ç–Ω–æüòé!"
    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    if user.work_type == '–û—Ñ–∏—Å':
        text = (
            "–ö—Ä—É—Ç–æ! –¢–æ–≥–¥–∞ –ª–æ–≤–∏ –Ω–∞—à –∞–¥—Ä–µ—Å –∏ –≤–∏–¥–µ–æ-–ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å, —á—Ç–æ–±—ã –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –Ω–∞—Å –æ—Ç –º–µ—Ç—Ä–æ –¢—É–ª—å—Å–∫–∞—è (2 –≤—ã—Ö–æ–¥)!\n\n"
            "*–ê–¥—Ä–µ—Å: –•–æ–ª–æ–¥–∏–ª—å–Ω—ã–π –ø–µ—Ä. 3, –æ—Ñ–∏—Å 325* \n\n"
            "–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ [–¢–æ–≤–∞—Ä–∏—â–µ—Å—Ç–≤–µ –†—è–±–æ–≤—Å–∫–æ–π –º–∞–Ω—É—Ñ–∞–∫—Ç—É—Ä—ã](https://yandex.ru/maps/org/tovarishchestvo_ryabovskoy_manufaktury/48085992655/?ll=37.626809%2C55.708945&z=14 ) "
            "–ù–∞—à–µ –∑–¥–∞–Ω–∏–µ - *–ì–û–ù–ß–ê–†*. \n\n"
            "*–ï—Å–ª–∏ —Ç—ã –Ω–∞ –º–∞—à–∏–Ω–µ:* —Ä—è–¥–æ–º —Å –Ω–∞–º–∏ –µ—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø–∞—Ä–∫–æ–≤–∫–∏, –∞ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ —Å–∞–º–æ–π –º–∞–Ω—É—Ñ–∞–∫—Ç—É—Ä—ã - –ø–ª–∞—Ç–Ω—ã–µ."
        )
        video_url = "BAACAgIAAxkBAAIb4Wc7gXMEHvew2EeS9v0YIKbvyupXAAKbVwAC1grhSSjoVeCmoUcBNgQ"
        await update.message.reply_video(video=video_url, read_timeout=120, write_timeout=120, connect_timeout=120)
        await update.message.reply_text(
            text=text,
            parse_mode="Markdown",
            reply_markup=keyboard,
            disable_web_page_preview=True
        )
        return DAY_1[9]

    elif user.work_type == '–£–¥–∞–ª–µ–Ω–∫–∞':
        text = (
            "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –í —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –ø—Ä–∏—à–ª—é —Å—é–¥–∞ *—Å—Å—ã–ª–∫—É –≤ ZOOM –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å HR.*\n"
            "–í—Å—Ç—Ä–µ—á–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –≤ 11:00.\n\n"
            "–ñ–¥–∏ –º–æ–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π!"
        )
        await update.message.reply_text(
            text=text,
            parse_mode="Markdown",
            reply_markup=keyboard
        )

    return DAY_1[9]


async def block_10(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ü–æ–∫–∞-–ø–æ–∫–∞! –î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å!"
    )
    photo_url = os.path.join(settings.MEDIA_ROOT, "byesticker.webp")

    await update.message.reply_sticker(
        sticker=open(photo_url, 'rb'),
    )

    empty_keyboard = ReplyKeyboardRemove()

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=empty_keyboard
    )
    await block_0(update, context)
    return DAY_2[0]
