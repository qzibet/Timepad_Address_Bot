import logging
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton
from telegram.ext import ContextTypes
from asgiref.sync import sync_to_async

from bot.handlers import month_3
from bot.handlers.conversations_states import MONTH_2, MONTH_3
from bot.models import TelegramUser

logger = logging.getLogger(__name__)


async def block_0(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ü—Ä–∏–≤–µ—Ç! –ê –≤–æ—Ç –∏ —èüòé —Ç–≤–æ–π –¢–∞–π–º–ø–∞–¥—Ä–µ—Å! –£–∂–µ 2 –º–µ—Å—è—Ü–∞, –∫–∞–∫ —Ç—ã —Å –Ω–∞–º–∏! –ö—Ä—É—Ç–æ –∂–µ?"
    )
    button_1 = "–î–∞–∞–∞–∞!"
    button_2 = "–ö–æ–Ω–µ—á–Ω–æü§©"

    keyboard = ReplyKeyboardMarkup(
        [[button_1, button_2]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        reply_markup=keyboard,
        parse_mode="Markdown",
    )
    return MONTH_2[0]


async def block_1(update: Update, context: ContextTypes.DEFAULT_TYPE):
    response = update.message.text
    print(response)
    chat_id = update.effective_chat.id
    user = await get_user_by_chat_id(chat_id)
    user.mood_second_month = response
    await save_user(user)
    text = "–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?"
    button_1 = "–í—Å–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ!"
    button_2 = "–ù–æ—Ä–º"
    button_3 = "–ù—É, —Ç–∞–∫–æ–µ"
    button_4 = "–°–æ–≤—Å–µ–º –Ω–µ –æ—á–µ–Ω—å"
    keyboard = ReplyKeyboardMarkup(
        [[button_1, button_2, button_3, button_4]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await update.message.reply_text(
        text=text,
        reply_markup=keyboard,
        parse_mode="Markdown",
    )
    return MONTH_2[1]


async def get_user_by_chat_id(chat_id):
    return await sync_to_async(TelegramUser.objects.get)(chat_id=chat_id)


async def save_user(user):
    await sync_to_async(user.save)()


async def block_2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    response = update.message.text


    if response in ["–í—Å–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ!", "–ù–æ—Ä–º"]:  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏
        text = (
            "–Ø —Ä–∞–¥, —á—Ç–æ –≤—Å–µ —Ö–æ—Ä–æ—à–æ. –°—Ç–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –Ω–∞—Å –∂–¥–µ—Ç! üå∫"
        )
        button = ReplyKeyboardMarkup(
            [[KeyboardButton("–ö–æ–Ω–µ—á–Ω–æ, —Ç–∞–∫ –∏ –±—É–¥–µ—Ç!")]],  # –û–±–µ—Ä–Ω—É—Ç–æ –≤ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤
            resize_keyboard=True,
            one_time_keyboard=True
        )
        await update.message.reply_text(
            text=text,
            reply_markup=button,
            parse_mode="Markdown",
        )
    else:
        text = (
            "–û—É, —Å–æ—á—É–≤—Å—Ç–≤—É—é —Ç–µ–±–µ! üòï –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π "
            "–∫ —Å–≤–æ–µ–º—É –±–∞–¥–¥–∏, –∫–æ–ª–ª–µ–≥–∞–º –∏–ª–∏ –≤ HR –∫ –Æ–ª–∏–∏. –ù–∞–¥–µ—é—Å—å, —Å–∫–æ—Ä–æ –≤—Å–µ –Ω–∞–ª–∞–¥–∏—Ç—Å—è! ü§û"
        )
        button = ReplyKeyboardMarkup(
            [[KeyboardButton("–•–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!")]],  # –û–±–µ—Ä–Ω—É—Ç–æ –≤ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤
            resize_keyboard=True,
            one_time_keyboard=True
        )
        await update.message.reply_text(
            text=text,
            reply_markup=button,
            parse_mode="Markdown",
        )
        return MONTH_2[2]


async def block_3(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–Ø —Å–ª—ã—à–∞–ª, —á—Ç–æ —Å–∫–æ—Ä–æ —É —Ç–µ–±—è –≤—Å—Ç—Ä–µ—á–∞ —Å HR. [–°—Å—ã–ª–∫–∞](https://us02web.zoom.us/j/86826507585?pwd=qmo2josZPIVmEJzV8cnrd3FRKlIjl7.1) "
        "–≤ —Ç–≤–æ–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ! –ü—Ä–∏—Ö–æ–¥–∏ –≤ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è üôÇ"
    )
    button = ReplyKeyboardMarkup(
        [[KeyboardButton("–°–ø–∞—Å–∏–±–æ! –ë—É–¥—É –≤–æ–≤—Ä–µ–º—è!")]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=button,
        disable_web_page_preview=True
    )
    return MONTH_2[3]


async def block_4(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–°—É–ø–µ—Ä! –ñ–µ–ª–∞—é —Ç–µ–±–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–Ω—è! –î–æ –≤—Å—Ç—Ä–µ—á–∏! üòò"
    )
    button = ReplyKeyboardRemove()
    await update.message.reply_text(
        text=text,
        reply_markup=button,
        parse_mode="Markdown",
    )
    await month_3.block_0(update, context)
    return MONTH_3[0]
