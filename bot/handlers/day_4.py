import os

from asgiref.sync import sync_to_async
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes
import logging

from bot.handlers import day_5
from bot.handlers.conversations_states import DAY_5, DAY_6
from bot.models import TelegramUser
from main import settings

logger = logging.getLogger(__name__)
IVAN_SECRET_PASSWORD = os.getenv("IVAN_SECRET_PASSWORD")


async def block_0(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! \n\n"
        "–ù–∞—á–∏–Ω–∞–µ–º –¥–µ–Ω—å —Å –∑–∞—Ä—è–¥–∫–∏ –∏... —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –æ –∫–æ—Ä–ø–æ—Ä–∞–≤—Ç–∏–Ω—ã—Ö –ø–ª—é—à–∫–∞—Ö –∏ –≤—Å—è–∫–∏—Ö –ø—Ä–∏–∫–æ–ª—é—Ö–∞—Ö! \n\n"
        "–†–∞—Å—Å–∫–∞–∂–µ–º —Ç–µ–±–µ –æ –Ω–∞—à–∏—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–∞—Ö –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö, –∞ \"–Ω–∞ –¥–µ—Å–µ—Ä—Ç\" - –î–ú–°!"
    )
    photo_url = os.path.join(settings.MEDIA_ROOT, "healthsticker.webp")
    await update.message.reply_sticker(
        sticker=open(photo_url, 'rb'),
    )
    button = "üöÄüöÄüöÄ"

    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        reply_markup=keyboard,
    )
    return DAY_5[0]


async def block_1(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ù–∞—á–Ω–µ–º —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–∫–∏–¥–æ–∫ (–æ—Ç –Ω–∞—Å –∏ –Ω–∞—à–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π-–¥—Ä—É–∑–µ–π)! \n\n"
        "[–ñ–º–∏ —Å—é–¥–∞](https://telegra.ph/Bonusy-i-partnerskie-skidki-11-14)"
    )
    button = "–°–∫–∏–¥–æ—á–∫–∏-—Å–∫–∏–¥–æ—á–∫–∏ üí≥"

    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        reply_markup=keyboard,
        parse_mode="Markdown",
        disable_web_page_preview=True
    )
    return DAY_5[1]


async def block_2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text_1 = (
        "–ê –µ—â–µ –º—ã –ª—é–±–∏–º –ø–æ–∑–¥—Ä–∞–≤–ª—è—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å *–î–ù–ï–ú –†–û–ñ–î–ï–ù–ò–Ø!* üéÇ \n\n"
        "–ó–∞–ø–æ–ª–Ω–∏ [—Ñ–æ—Ä–º—É](https://docs.google.com/forms/d/e/1FAIpQLSfpetjG_IOfiDmNmhnRt7vLFLzIcySa-loWm9mVPhthTU-k1w/viewform), "
        "—á—Ç–æ–±—ã –º—ã –∑–Ω–∞–ª–∏, –∫–æ–≥–¥–∞ –∫—Ä–∏—á–∞—Ç—å —Ç–µ–±–µ HAPPY BIRTHDAY!!! üéâ \n\n"
        "–ê –µ—â—ë, –Ω–µ –∑–∞–±—É–¥—å *–≤—ã–±—Ä–∞—Ç—å —Å–µ–±–µ –ø–æ–¥–∞—Ä–æ–∫ *ü§©"
    )
    button = "–û, –ø–æ–¥–∞—Ä–æ—á–∫–∏! –≠—Ç–æ —è –ª—é–±–ª—é üéÅ"
    photo_url = os.path.join(settings.MEDIA_ROOT, "birthdaysticker.webp")

    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await update.message.reply_sticker(
        sticker=open(photo_url, 'rb'),
    )
    await update.message.reply_text(
        text=text_1,
        reply_markup=keyboard,
        parse_mode="Markdown",
    )

    return DAY_5[2]


async def get_user_by_chat_id(chat_id):
    return await sync_to_async(TelegramUser.objects.get)(chat_id=chat_id)


async def save_user(user):
    await sync_to_async(user.save)()


async def block_3(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–õ–æ–≤–∏ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ —Å–¥–µ–ª–∞–ª–∞ –Ω–∞—à–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—Ü–∞ *–í–∏–∫–∞ –õ–∏—Ç–≤–∏–Ω–æ–≤–∞ @vi\\_litvinova* "
        "\\(–∞–∫–∫–∞—É–Ω—Ç\\-–º–µ–Ω–µ–¥–∂–µ—Ä –æ—Ç–¥–µ–ª–∞ —Ä–∞–∑–≤–∏—Ç–∏—è\\), –≤–¥–æ—Ö–Ω–æ–≤–∏–≤—à–∏—Å—å –Ω–∞—à–∏–º –ª–µ—Ç–Ω–∏–º –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–æ–º –≤ —Å—Ç–∏–ª–µ –¥–µ—Ç—Å–∫–æ–≥–æ –ª–∞–≥–µ—Ä—è\\!"
    )
    button = "–•–æ—á—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å!"

    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await update.message.reply_text(
        text=text,
        reply_markup=keyboard,
        parse_mode="MarkdownV2",
    )
    return DAY_5[3]


async def block_4(update: Update, context: ContextTypes.DEFAULT_TYPE):
    button = "–ö—Ä—É—Ç–æ! –•–æ—á—É —Ç–∞–∫–∂–µ!"
    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    message = await update.message.reply_video(
        video="BAACAgIAAxkBAAIocWdPgWVjk6gBB08taBr7isdeom_3AAKzcQACD5l4Slvj5v-vJSKhNgQ",
        reply_markup=keyboard,
        read_timeout=120,
        write_timeout=120,
        connect_timeout=120,
        pool_timeout=120
    )

    video_file_id = message.video.file_id
    logger.info(f"video id {video_file_id}")
    return DAY_5[4]


async def block_5(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ù–æ —ç—Ç–æ –Ω–µ –≤—Å—ë! –£ –Ω–∞—Å –µ—Å—Ç—å –µ—â—ë –∏ –¥—Ä—É–≥–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è ‚ú®\n\n"
    )
    button = "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ ü§©"
    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        reply_markup=keyboard
    )
    return DAY_5[5]


async def block_6(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "*–ù–∞—à–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è* \n\n"
        "üçª *–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:* —Å–æ–±–∏—Ä–∞–µ–º—Å—è –≤–º–µ—Å—Ç–µ –∏ –≤–æ —á—Ç–æ-—Ç–æ –∏–≥—Ä–∞–µ–º, —Å–º–æ—Ç—Ä–∏–º –∫–∏–Ω–æ, –ø—å–µ–º –≤–∏–Ω–∏—à–∫–æ –∏ —Ç.–ø. \n\n"
        "üé§*Timepad Up:*  –æ–±–º–µ–Ω –æ–ø—ã—Ç–æ–º, –∫–æ–≥–¥–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–π —Å–ø–∏–∫–µ—Ä –¥–µ–ª–∏—Ç—Å—è —Å–≤–æ–∏–º–∏ –∏—Å—Ç–æ—Ä–∏—è–º–∏ –∏ –∑–Ω–∞–Ω–∏—è–º–∏, "
        "–∞ –º—ã —Ä–∞—Å—à–∏—Ä—è–µ–º –∫—Ä—É–≥–æ–∑–æ—Ä. \n\n"
        "üéÜ*–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ã –∏ –≤–µ—á–µ—Ä–∏–Ω–∫–∏:* –æ—Ç–º–µ—á–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏."
        "–ê –≤–æ—Ç [–∑–¥–µ—Å—å](https://drive.google.com/drive/u/1/folders/1kg8bYqISsnXgyKltrnZGRZBqrZ6T8gNn) –≤—Å–µ–≥–¥–∞ "
        "—Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ üì∏ (–¥–µ–ª–∞–π –¢–´–ö –Ω–∞ —Å–ª–æ–≤–æ \"–∑–¥–µ—Å—å\"). "
    )
    button = "–£—Ö —Ç—ã, –∫–∞–∫ –∑–¥–æ—Ä–æ–≤–æ!"
    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        reply_markup=keyboard,
        parse_mode="Markdown",
    )
    return DAY_5[6]


async def block_7(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ê —Ç–µ–ø–µ—Ä—å –Ω–µ–±–æ–ª—å—à–∞—è [–∞–Ω–∫–µ—Ç–∞](https://docs.google.com/forms/d/e/1FAIpQLSfw1RFDwUod-F868-9MzN9VuJ-8CVD9T---I-RW_-ue5C6WuA/viewform), "
        "—á—Ç–æ–±—ã –º—ã –ª—É—á—à–µ —É–∑–Ω–∞–ª–∏ —Ç–µ–±—è –∏ —Ç–≤–æ–∏ —É–≤–ª–µ—á–µ–Ω–∏—è üé´ \n\n"
        "P.S. –ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è —Å—é–¥–∞, –º–Ω–µ –µ—Å—Ç—å –æ —á—ë–º —Ç–µ–±–µ –µ—â—ë —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å!"
    )
    button = "–ì–æ—Ç–æ–≤–æ–æ–æ–æ"
    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True,
    )

    await update.message.reply_text(
        text=text,
        reply_markup=keyboard,
        parse_mode="Markdown",
    )
    return DAY_5[7]


async def block_8(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    user = await get_user_by_chat_id(chat_id)
    user.timepad += 10
    await save_user(user)

    text = (
        "–õ–æ–≤–∏ *10 —Ç–∞–π–º–ø–∞–¥–∏–∫–æ–≤* –∏ –±–µ–≥–∏ –∫ –Æ–ª–µ –∑–∞ –ø–∞—Ä–æ–ª–µ–º üèÉüèº‚Äç‚ôÇÔ∏è\n\n"
    )

    button = ReplyKeyboardRemove()

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=button
    )
    photo_url = os.path.join(settings.MEDIA_ROOT, "10sticker.webp")
    await update.message.reply_sticker(
        sticker=open(photo_url, 'rb'),
    )

    context.user_data['awaiting_password'] = True
    return DAY_5[8]


async def block_9(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.user_data.get('awaiting_password', False):
        password = update.message.text
        print(password)

        if password == IVAN_SECRET_PASSWORD:
            context.user_data['awaiting_password'] = False
            text = (
                "–ö—Ä—É—Ç–æ! \n\n"
                "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –≤ –≥–∏–±—Ä–∏–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –∏ –≤–∏–¥–∏–º—Å—è –Ω–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é üòî "
                "–ù–û —É —Ç–µ–±—è –µ—Å—Ç—å –∫—Ä—É—Ç–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ —á–∞—â–µ (–æ–Ω–ª–∞–π–Ω –∏ –æ—Ñ–ª–∞–π–Ω), "
                "*–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–≤—à–∏—Å—å –≤ –Ω–∞—à–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º Random coffee* ‚òïÔ∏è \n\n"
                "*–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?* \n\n"
                "–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ [–±–æ—Ç–µ](https://t.me/Timepadres_bot), "
                "—Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é —Ç–µ–±–µ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≤–æ–µ–≥–æ –Ω–æ–≤–æ–≥–æ random coffee –¥—Ä—É–≥–∞, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã "
                "–º–æ–≥–ª–∏ –±—ã –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è –æ–Ω–ª–∞–π–Ω/–æ—Ñ–ª–∞–π–Ω –∏ –∫—Ä—É—Ç–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è!\n\n"
                "*Random Coffee* ‚Äî —ç—Ç–æ –æ—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å: \n\n"
                "‚òïÔ∏è –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –æ—Ç–¥–µ–ª–æ–≤ –∏ –Ω–µ "
                "–∏—Å–ø—ã—Ç—ã–≤–∞—Ç—å –Ω–µ–ª–æ–≤–∫–æ—Å—Ç—å\n\n"
                "‚òïÔ∏è —É–∑–Ω–∞—Ç—å –æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–µ —Ä–∞–±–æ—Ç—ã –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥ \n\n"
                "‚òïÔ∏è –æ–±–º–µ–Ω—è—Ç—å—Å—è –æ–ø—ã—Ç–æ–º –∏ –ø–æ–æ–±—â–∞—Ç—å—Å—è –æ–± –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö \n\n"
                "ü´£ —Ç–æ–ª—å–∫–æ —Ç—Å—Å—Å—Å, –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞: `timepad_friends` \n\n"
                "–ó–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ Random coffee —Ç–µ–±–µ —Ç–∞–∫–∂–µ —É–ø–∞–¥–µ—Ç *10 —Ç–∞–π–º–ø–∞–¥–∏–∫–æ–≤!*"
            )
            await update.message.reply_text(text=text, parse_mode="Markdown")
            await update.message.reply_text("–ö–∞–∫ –ø—Ä–æ–π–¥–µ—à—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é - –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∫–æ –º–Ω–µ!")
            button_1 = "–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ü–†–û–ô–î–ï–ù–ê, –∂–¥—É –Ω–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞! ‚òïÔ∏è"
            button_2 = "–ü–æ–∫–∞ –ø–æ–¥—É–º–∞—é!"
            keyboard = ReplyKeyboardMarkup(
                [[button_1, button_2]],
                resize_keyboard=True,
                one_time_keyboard=True
            )

            await update.message.reply_text(
                "–ü—Ä–æ—à–µ–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é?",
                reply_markup=keyboard,
            )
            return DAY_5[9]
        else:
            await update.message.reply_text("–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π üòì –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!")
            return DAY_5[8]


async def block_10(update: Update, context: ContextTypes.DEFAULT_TYPE):
    response = update.message.text
    print(response)
    button = "–ü–æ—Å–º–æ—Ç—Ä—é üòá"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )

    if response == "–ü–æ–∫–∞ –ø–æ–¥—É–º–∞—é!":
        text = (
            "–ë—É–¥–µ—Ç –∑–¥–æ—Ä–æ–≤–æ, –µ—Å–ª–∏ —Ç—ã —Å—Ç–∞–Ω–µ—à—å —á–∞—Å—Ç—å—é —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ ü•∫ –ù–û, –µ—Å–ª–∏ –ø–æ–∫–∞ –Ω–µ —Ö–æ—á–µ—à—å, —Ç–æ –ø–æ–≥–Ω–∞–ª–∏ –¥–∞–ª—å—à–µ!"
        )
    else:
        chat_id = update.effective_chat.id
        user = await get_user_by_chat_id(chat_id)
        user.timepad += 10
        await save_user(user)
        text = "–ù—É, —Ç–æ–≥–¥–∞ –ø–æ–≥–Ω–∞–ª–∏ –¥–∞–ª—å—à–µ!"
        photo_url = os.path.join(settings.MEDIA_ROOT, "10sticker.webp")
        await update.message.reply_sticker(
            sticker=open(photo_url, 'rb'),
        )
        await update.message.reply_text(
            text="–õ–æ–≤–∏ 10 —Ç–∞–π–º–ø–∞–¥–∏–∫–æ–≤ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É",
            reply_markup=keyboard,
        )

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )
    big_text = (
        "–£ –Ω–∞—Å –µ—Å—Ç—å —Ç—Ä–∞–¥–∏—Ü–∏—è! \n\n"
        "–†–∞–∑ –≤ –º–µ—Å—è—Ü *–º—ã –≤—Å—Ç—Ä–µ—á–∞–µ–º—Å—è –≤—Å–µ –≤–º–µ—Å—Ç–µ –æ–Ω–ª–∞–π–Ω* –∏ –ø–æ–¥–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏ - –∫–∞–∫ —É –∫–æ–≥–æ –ø—Ä–æ—à–µ–ª –º–µ—Å—è—Ü! \n\n"
        "–ú–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–∏—Å–∏ –ø—Ä–æ—à–ª—ã—Ö –≤—Å—Ç—Ä–µ—á üéûÔ∏è \n\n"
        "üéØ [–ó–∞–ø–∏—Å–∏ –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π](https://www.notion.so/42d7ebd5335844e2afacbb1c6f0c061a?pvs=21) \n\n"
        "üéØ [–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è](https://www.notion.so/4c1bcbf52bef458c8b5af800e94c8871?pvs=2)"
    )
    await update.message.reply_text(
        text=big_text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )
    return DAY_5[10]


async def block_11(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ï—â—ë —É –Ω–∞—Å –µ—Å—Ç—å *—Ä–∞–∑–Ω—ã–µ —á–∞—Ç—ã –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º!* \n\n"
        "–í—Å—Ç—É–ø–∞—Ç—å –≤–æ –≤—Å–µ –Ω–µ –Ω—É–∂–Ω–æ üòÖ, –∞ *—Ç–æ–ª—å–∫–æ –ø–æ –∂–µ–ª–∞–Ω–∏—é!*"
    )
    button = "–•–æ—á—É —Ö–æ—á—É"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )
    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )
    return DAY_5[11]


async def block_12(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "*–í—ã–±–∏—Ä–∞–π:* \n\n"
        "- [–ö–∞—Ç–æ–∫](https://t.me/+x2m0Ry7AU3cwODEy) - –∑–∏–º–æ–π —Å—Ç–∞—Ä–∞–µ–º—Å—è –≤—ã–±–∏—Ä–∞—Ç—å—Å—è –Ω–∞ –∫–∞—Ç–æ–∫ –≤—Å–µ–π –∫–æ–º–∞–Ω–¥–æ–π\n\n"
        "- [–°–∞–ø—ã](https://t.me/+XJlZ1_sJTKllZjQ6) - –∞ –ª–µ—Ç–æ–º —Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–æ–ø–ª–∞–≤–∞—Ç—å –Ω–∞ —Å–∞–ø–∞—Ö\n\n"
        "- [–ö–∞—Ä–∞–æ–∫–µ](https://t.me/+WTlTv0-Tym0zNjUy) - –æ—á–µ–Ω—å –ª—é–±–∏–º –ø–µ—Ç—å –∏ –∏–Ω–æ–≥–¥–∞ —Å–æ–±–∏—Ä–∞–µ–º—Å—è –Ω–∞—à–µ–π —Ç—É—Å–æ–≤–∫–æ–π –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–ª–∞  \n\n"
        "- [–°–º–µ—Ö –∏ –≥—Ä–µ—Ö](https://t.me/+aVrcvXCmZWcxYTMy) - —ç—Ç–æ –∫–∞–Ω–∞–ª –Ω–∞—à–µ–π –ª—é–±–∏–º–æ–π –∫–æ–º–∞–Ω–¥—ã —Å–∞–ø–æ—Ä—Ç–æ–≤, –≥–¥–µ –æ–Ω–∏ –¥–µ–ª—è—Ç—Å—è –∑–∞–±–∞–≤–Ω—ã–º–∏ –ø—Ä–æ–∏—à–µ—Å—Ç–≤–∏—è–º–∏ –≤ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç–µ \n\n"
    )
    button = "–°—É–ø–µ—Ä! –ê —á—Ç–æ —Ç–∞–º –ø—Ä–æ –î–ú–°?ü§î"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )
    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard,
        disable_web_page_preview=True
    )
    return DAY_5[12]


async def block_13(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–î–∞-–¥–∞, –∫–∞–∫ –∏ –æ–±–µ—â–∞–ª–∏ –≤–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ [–î–ú–°](https://timepaddev.notion.site) (–¢–´–ö –Ω–∞ —Å–ª–æ–≤–æ –î–ú–°). \n\n"
    )
    keyboard = ReplyKeyboardMarkup(
            [["–í–æ–∑—å–º—É –Ω–∞ –∑–∞–º–µ—Ç–∫—É üìù"]],
            resize_keyboard=True,
            one_time_keyboard=True
    )
    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard,
        disable_web_page_preview=True
    )
    return DAY_5[13]


async def block_14(update: Update, context: ContextTypes.DEFAULT_TYPE):
    button = ReplyKeyboardRemove()
    photo_url = os.path.join(settings.MEDIA_ROOT, "byesticker.webp")
    await update.message.reply_sticker(
        sticker=open(photo_url, 'rb'),
    )
    await update.message.reply_text(
        text="–ö—Ä—É—Ç–æ –ø–æ–±–æ–ª—Ç–∞–ª–∏! –ü–æ–∫–∞-–ø–æ–∫–∞, –∏ –¥–æ –∑–∞–≤—Ç—Ä–∞!",
        reply_markup=button,
    )
    await day_5.block_0(update, context)
    return DAY_6[0]


