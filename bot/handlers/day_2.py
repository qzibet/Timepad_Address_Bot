import os
import re

from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes
from asgiref.sync import sync_to_async
import logging

from bot.handlers import day_3
from bot.handlers.conversations_states import DAY_3, DAY_4
from bot.models import TelegramUser, Code

logger = logging.getLogger(__name__)
SECRET_PASSWORD = os.getenv("SECRET_PASSWORD")


async def block_0(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        f"–ü—Ä–∏–≤–µ—Ç! –° —Ç–æ–±–æ–π —Å–Ω–æ–≤–∞  –¢–∞–π–º–ø–∞–¥—Ä–µ—Å-–±–æ—Ç –∏ –¢–∞–π–º–∏–∫–∞, –º—ã —É–∂–µ —Å–æ—Å–∫—É—á–∏–ª–∏—Å—å! üòç\n\n"
        "–ê —Ç—ã? ü§î"
    )
    photo_url = "https://disk.yandex.ru/i/_ghhRcXzCavlEw"
    button_1 = "–î–∞–∞–∞! –Ø —Ç–æ–∂–µ!"
    button_2 = "–ù—É, –ø–æ—á—Ç–∏üòÖ "
    keyboard = ReplyKeyboardMarkup(
        [[button_1, button_2]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_photo(
        photo=photo_url,
        caption=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )
    return DAY_3[0]


async def block_1(update: Update, context: ContextTypes.DEFAULT_TYPE):
    photo_url = "https://disk.yandex.ru/i/g1x7ZAxQoITwSA"
    text = (
        "–°–µ–≥–æ–¥–Ω—è –º—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏–º —Ç–µ–±—è —Å Timepad –∏ —Ä–∞—Å—Å–∫–∞–∂–µ–º –ø—Ä–æ –Ω–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã!\n\n"
        "üí°Kind reminder:  –í—Å–µ—Ö, –∫—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –Ω–∞ —Ç–≤–æ–µ–º –ø—É—Ç–∏ –≤ —ç—Ç–æ–º –±–æ—Ç–µ —Å–æ—Ö—Ä–∞–Ω—è–π –≤ –∫–æ–Ω—Ç–∞–∫—Ç—ã: "
        "**–§–∞–º–∏–ª–∏—è –ò–º—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å/–æ—Ç–¥–µ–ª –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏**\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä, –Æ–ª–∏—è –ú–∞–ª–∏–∫–æ–≤–∞ HR Timepad @malikovaj (–¥–µ–ª–∞–π –¢–´–ö, —á—Ç–æ–±—ã –µ—â—ë —Ä–∞–∑ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ—Ç–∞–∫—Ç –Æ–ª–∏). "
        "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –±—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –∫–æ–ª–ª–µ–≥ –≤ —á–∞—Ç–∞—Ö."
    )

    button = "–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–≤–µ—Ç!"
    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_photo(
        photo=photo_url,
        caption=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )
    return DAY_3[1]


async def get_user_by_chat_id(chat_id):
    return await sync_to_async(TelegramUser.objects.get)(chat_id=chat_id)


async def save_user(user):
    await sync_to_async(user.save)()


async def block_2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    user = await get_user_by_chat_id(chat_id)
    user.timepad = 5
    await save_user(user)

    photo_url = "https://disk.yandex.ru/i/g1x7ZAxQoITwSA"
    text = (
        "–ê –µ—â–µ, —É –Ω–∞—Å –µ—Å—Ç—å —Å–≤–æ—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≤–∞–ª—é—Ç–∞ - **—Ç–∞–π–º–ø–∞–¥–∏–∫–∏**!\n\n"
        "–ò—Ö –º–æ–∂–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ –±–∏–ª–µ—Ç—ã, –Ω–∞ —Ä–∞–∑–Ω—ã–µ –ø–ª—é—à–∫–∏ –æ—Ç –Ω–∞—Å –∏ –Ω–∞ –º–µ—Ä—á! –û–± —ç—Ç–æ–º –µ—â—ë —Ä–∞—Å—Å–∫–∞–∂–µ–º –ø–æ–∑–∂–µ. "
        "–ê –ø–æ–∫–∞ –ª–æ–≤–∏ **5 –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ç–∞–π–º–ø–∞–¥–∏–∫–æ–≤!**\n\n"
    )

    button = "ü§ë"
    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_photo(
        photo=photo_url,
        caption=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )
    return DAY_3[2]


async def block_3(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–≠—Ç–æ –Ω–∞—à–∞ –ê—Ñ–∏—à–∞ (–¥–µ–ª–∞–π –¢–´–ö –Ω–∞ —Å–ª–æ–≤–æ [–∞—Ñ–∏—à–∞](https://afisha.timepad.ru))"
        "–ü—Ä–æ –Ω–µ–µ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –±–∏–ª–µ—Ç–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –î–∞—à–∞ –ï–≥–æ—Ä–æ–≤–∞ @darialvistner"
    )
    button = "–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è üòä"
    keyboard = ReplyKeyboardMarkup(
        [[button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )
    return DAY_3[3]


async def block_4(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ê —Ç–µ–ø–µ—Ä—å –∑–∞–¥–∞–Ω–∏–µ: **–Ω–∞–π–¥–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –¥–ª—è —Ç–µ–±—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–∞ –Ω–∞—à–µ–π [–ê—Ñ–∏—à–µ] (https://afisha.timepad.ru)** "
        "**–∏ —Å–∫–∏–Ω—å –µ–≥–æ –Æ–ª–∏–∏ HR.**\n\n"
        "P.S. –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è —Ç—ã –ø–æ–ª—É—á–∏—à—å **–ø–∞—Ä–æ–ª—å –æ—Ç –Æ–ª–∏–∏ –∏ 5 —Ç–∞–π–º–ø–∞–¥–∏–∫–æ–≤ –æ—Ç –¢–∞–π–º–∏–∫–∏.**"
    )
    button = "–ü–∞—Ä–æ–ª—å —É –º–µ–Ω—è, –≥–¥–µ –º–æ–∏ —Ç–∞–π–º–ø–∞–¥–∏–∫–∏?"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )
    return DAY_3[4]


async def block_5(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = "–û—Ç–ª–∏—á–Ω–æ! –í–≤–æ–¥–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏ –ø–æ–π–¥—ë–º –¥–∞–ª—å—à–µ!"
    await update.message.reply_text(text)

    context.user_data['awaiting_password'] = True
    return DAY_3[5]


async def block_6(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.user_data.get('awaiting_password', False):
        password = update.message.text

        if password == SECRET_PASSWORD:
            context.user_data['awaiting_password'] = False
            return DAY_3[6]
        else:
            await update.message.reply_text("–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π üòì –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!")
            await block_5(update, context)


async def block_7(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = ("–ü—Ä–æ–¥–æ–ª–∂–∏–º –Ω–∞—à–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ\\!\n\n"
            "–£ –Ω–∞—Å –µ—Å—Ç—å –∂—É—Ä–Ω–∞–ª \"–°–ø–∞—Å–∏—Ç–µ –º–æ–∏ –≤—ã—Ö–æ–¥–Ω—ã–µ\"\\. –ü—Ä–æ –Ω–µ–≥–æ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç "
            "\\(—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ –î–∞—à–∞ –ì–∞–π–¥—É–∫–æ–≤–∞ @dasha\\_gaydukova\\)\n\n"
            "P\\.S\\. –¢—ã –∑–∞–ø–∏—Å—ã–≤–∞–µ—à—å –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã\\?\\)")

    button = "–ó–¥–æ—Ä–æ–≤–æ! –ß—Ç–æ –¥–∞–ª—å—à–µ?"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        parse_mode="MarkdownV2",
        reply_markup=keyboard
    )
    return DAY_3[7]


async def block_8(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = ("–í—ã–±–µ—Ä–∏ —ç–º–æ–¥–∂–∏, –∫–æ—Ç–æ—Ä–æ–µ –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–≤–æ–∏ –∏–¥–µ–∞–ª—å–Ω—ã–µ –≤—ã—Ö–æ–¥–Ω—ã–µ:")
    button_1 = "üñº"
    button_2 = "üå≥"
    button_3 = "‚úàÔ∏è"

    keyboard = ReplyKeyboardMarkup(
            [[button_1, button_2, button_3]],
            resize_keyboard=True,
            one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )
    return DAY_3[8]


async def block_9(update: Update, context: ContextTypes.DEFAULT_TYPE):
    response = update.message.text
    print(response)
    button = "–û, –¥–∞! –í–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç!"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )

    if response == "üñº":
        text = (
            "üñº –ê—Ä—Ç-–±—Ä–∞–Ω—á–∏ –∫–∞–∂–¥—ã–µ –≤—ã—Ö–æ–¥–Ω—ã–µ ‚Äî —ç—Ç–æ —Ç–≤–æ–π —è–∑—ã–∫ –ª—é–±–≤–∏: https://journal.timepad.ru/selections/branchi-moskvy"
        )
    elif response == "üå≥":
        text = (
            "üå≥ –£–π—Ç–∏ –≤ –ª–µ—Å –∏ —ç—Å—Ç–µ—Ç–∏—á–Ω–æ –≥—Ä—É—Å—Ç–∏—Ç—å...–∏–¥–µ–∞–ª—å–Ω–æ: https://journal.timepad.ru/selections/ekotropy-podmoskovya"
        )
    elif response == "‚úàÔ∏è":
        text = (
            "‚úàÔ∏è –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –≤–∞–º –∫ –ª–∏—Ü—É: https://journal.timepad.ru/tag/ekskursii-i-puteshestviya"
        )
    else:
        text = "what?:"

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )
    return DAY_3[9]


async def block_10(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    user = await get_user_by_chat_id(chat_id)
    user.timepad += 5
    await save_user(user)

    photo_url = "https://disk.yandex.ru/i/g1x7ZAxQoITwSA"
    text = "–õ–æ–≤–∏ **–µ—â–µ 5 —Ç–∞–π–º–ø–∞–¥–∏–∫–æ–≤!** –ü–æ–≥–Ω–∞–ª–∏ –¥–∞–ª—å—à–µ!"

    await update.message.reply_photo(
        photo=photo_url,
        caption=text,
        parse_mode="Markdown",
    )

    text_2 = (
        "–£ –Ω–∞—Å –µ—â—ë –µ—Å—Ç—å tg-–∫–∞–Ω–∞–ª \"–°–ø–∞—Å–∏—Ç–µ –º–æ–∏ –≤—ã—Ö–æ–¥–Ω—ã–µ\" @TimepadRU "
        "(–¥–µ–ª–∞–π –¢–´–ö –Ω–∞ [–°–ø–∞—Å–∏—Ç–µ –º–æ–∏ –≤—ã—Ö–æ–¥–Ω—ã–µ](https://t.me/TimepadRU), —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª ). "
        "–ü—Ä–æ –Ω–µ–≥–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –Ω–∞—à–∞ –°–ú–ú—â–∏—Ü–∞ –ú–∞—à–∞ –ü–æ–ø–æ–≤–∞ @marypopossa"
    )
    button = "–ö—Ä—É—Ç–æ!"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text_2,
        parse_mode="Markdown",
        reply_markup=keyboard
    )

    return DAY_3[10]


async def block_11(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ê —Ç–µ–ø–µ—Ä—å –Ω–µ–±–æ—à—å—à–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è —Ç–µ–±—è üòâ: –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ tg-–∫–∞–Ω–∞–ª "
        "\"–°–ø–∞—Å–∏—Ç–µ –º–æ–∏ –≤—ã—Ö–æ–¥–Ω—ã–µ\". @TimepadRU"
    )
    button = "–ì–æ—Ç–æ–≤–æ ‚úÖ"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )

    return DAY_3[11]


async def block_12(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    user = await get_user_by_chat_id(chat_id)
    user.timepad += 5
    await save_user(user)

    photo_url = "https://disk.yandex.ru/i/e9OYMWi8p8hIXg"
    text = ("–õ–æ–≤–∏ **5 —Ç–∞–π–º–ø–∞–¥–∏–∫–æ–≤** –∏ 100 –ø–ª—é—Å–æ–≤ –∫ –∫–∞—Ä–º–µ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Ç–¥–µ–ª–∞!")

    button = "–£—Ä–∞!"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )

    await update.message.reply_photo(
        photo=photo_url,
        caption=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )

    return DAY_3[12]


async def block_13(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ï—â–µ —É –Ω–∞—Å –µ—Å—Ç—å –¥–≤–∞ –ø–æ–¥–∫–∞—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–ª—É—à–∞—Ç—å –Ω–∞ –¥–æ—Å—É–≥–µ:\n\n"
        "üéß\"–°–ø–∞—Å–∏—Ç–µ –º–æ–∏ –≤—ã—Ö–æ–¥–Ω—ã–µ\" —Å –≥–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º [–í–∞—Ä–µ–π –°–µ–º–µ–Ω–∏—Ö–∏–Ω–æ–π](https://savemyweekend.mave.digital)\n\n"
        "üéß\"[–¢–æ—á–Ω–æ –∏–¥–µ–º](https://tochnoidem.mave.digital)\""
    )
    button = "–û, –∫–∞–∫ –∫–ª–∞—Å—Å–Ω–æ! üéß"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )

    return DAY_3[13]


async def block_14(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–¢–µ–ø–µ—Ä—å –±–µ–∂–∏–º –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –∏–∑ –æ—Ç–¥–µ–ª–∞ —Ä–µ–∫–ª–∞–º—ã! \n\n"
        "–£ –Ω–∞—Å –µ—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –ø—Ä–æ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–º —Ä–∞—Å—Å–∫–∞–∂–µ—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å "
        "–æ—Ç–¥–µ–ª–∞ —Ä–µ–∫–ª–∞–º—ã - –ê–∑–∞–º–∞—Ç –û—Ä–∫–≤–∞—Å–æ–≤ @azamorkvasov ‚úåüèº"
    )
    button = "–ù—É –Ω–∏—á–µ–≥–æ —Å–µ–±–µ!"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )

    return DAY_3[14]


async def block_15(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–°–æ–≥–ª–∞—Å–∏—Å—å, —É –Ω–∞—Å –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ? üé™"
    )
    button = "–î–∞–∞–∞–∞–∞!"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=keyboard
    )

    return DAY_3[15]


async def block_16(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['test_score'] = 0
    text = (
        "–î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º —á–µ–∫-–∞–ø —Ç–æ–≥–æ, —á—Ç–æ –∑–∞–ø–æ–º–Ω–∏–ª! \n\n"
        "–ü—Ä–æ–π–¥–∏ –Ω–µ–±–æ–ª—å—à–æ–π —Ç–µ—Å—Ç ü§ì \n\n"
        "P.S. –ó–∞ –∫–∞–∂–¥—ã–π –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç —Ç–µ–±–µ –Ω–∞—á–∏—Å–ª—è—Ç —Ç–∞–π–º–ø–∞–¥–∏–∫–∏!"
    )
    button = ReplyKeyboardRemove()

    await update.message.reply_text(
        text=text,
        parse_mode="Markdown",
        reply_markup=button
    )

    text_2 = (
        "–¢–æ–≥–¥–∞ –ø–æ–≥–Ω–∞–ª–∏! \n\n"
        "–ò –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å, **–≤ –∫–∞–∫–æ–π —Å–∏—Å—Ç–µ–º–µ –º—ã —Å—Ç–∞–≤–∏–º –∑–∞–¥–∞—á–∏?**"
    )
    await update.message.reply_text(
        text=text_2,
        parse_mode="Markdown",
        reply_markup=button
    )

    return DAY_3[16]


async def block_17(update: Update, context: ContextTypes.DEFAULT_TYPE):
    response = update.message.text

    if re.search(r"\b–µ–≤–∞\b", response, re.IGNORECASE):
        context.user_data['test_score'] += 1
        chat_id = update.effective_chat.id
        user = await get_user_by_chat_id(chat_id)
        user.timepad += 1
        await save_user(user)
        await update.message.reply_text("–í–µ—Ä–Ω–æ! + 1 —Ç–∞–π–º–ø–∞–¥–∏–∫")
        await update.message.reply_text("–í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å, **–≤ –∫–∞–∫–∏–µ –¥–Ω–∏ —É –Ω–∞—Å –ø—Ä–∏—Ö–æ–¥–∏—Ç –∑–∞—Ä–ø–ª–∞—Ç–∞?**")
    else:
        await update.message.reply_text("–≠—Ö, –∫–∞–∫ –∂–µ —Ç—ã –∑–∞–±—ã–ª –Ω–∞—à—É –ï–í–£üòì")
        await update.message.reply_text("–í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å, **–≤ –∫–∞–∫–∏–µ –¥–Ω–∏ —É –Ω–∞—Å –ø—Ä–∏—Ö–æ–¥–∏—Ç –∑–∞—Ä–ø–ª–∞—Ç–∞?**")

    return DAY_3[17]


async def block_18(update: Update, context: ContextTypes.DEFAULT_TYPE):
    response = update.message.text

    if re.search(r"\b5\b" and r"\b5\b", response, re.IGNORECASE):
        context.user_data['test_score'] += 1
        chat_id = update.effective_chat.id
        user = await get_user_by_chat_id(chat_id)
        user.timepad += 1
        await save_user(user)
        await update.message.reply_text("–í–µ—Ä–Ω–æ! + 1 —Ç–∞–π–º–ø–∞–¥–∏–∫")
        await update.message.reply_text("–¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å, **–∫–∞–∫ –Ω–∞–∑—ã–≤–µ—Ç—Å—è –Ω–∞—à tg-–∫–∞–Ω–∞–ª —Å –∞—Ñ–∏—à–æ–π?**")
    else:
        await update.message.reply_text("–ó–∞–ø–∏—Å—ã–≤–∞–π –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å - 5 –∏ 20 üóìÔ∏è")
        await update.message.reply_text("–¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å, **–∫–∞–∫ –Ω–∞–∑—ã–≤–µ—Ç—Å—è –Ω–∞—à tg-–∫–∞–Ω–∞–ª —Å –∞—Ñ–∏—à–æ–π?**")

    return DAY_3[18]


async def block_19(update: Update, context: ContextTypes.DEFAULT_TYPE):
    response = update.message.text

    if re.search(r"\b–°–ø–∞—Å–∏—Ç–µ –º–æ–∏ –≤—ã—Ö–æ–¥–Ω—ã–µ\b", response, re.IGNORECASE):
        context.user_data['test_score'] += 1
        chat_id = update.effective_chat.id
        user = await get_user_by_chat_id(chat_id)
        user.timepad += 1
        await save_user(user)
        await update.message.reply_text("–í–µ—Ä–Ω–æ! + 1 —Ç–∞–π–º–ø–∞–¥–∏–∫")
        await update.message.reply_text(
            "–ß–µ—Ç–≤–µ—Ä—Ç—ã–π –≤–æ–ø—Ä–æ—Å, **–≥–¥–µ –º–æ–∂–Ω–æ –ø–µ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —Ñ–æ—Ç–∫–∞–º–∏ —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –∏ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è? "
            "**(—ç—Ç–æ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ –Ω–∞—à–∏—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∫–∞–Ω–∞–ª–æ–≤, –Ω–µ –Ω–µ–ª—å–∑—è–≥—Ä–∞–º–º üòÇ)"
        )
    else:
        await update.message.reply_text("–≠—Ö, –°–ø–∞—Å–∏—Ç–µ –º–æ–∏ –≤—ã—Ö–æ–¥–Ω—ã–µ! @TimepadRU")
        await update.message.reply_text(
            "–ß–µ—Ç–≤–µ—Ä—Ç—ã–π –≤–æ–ø—Ä–æ—Å, **–≥–¥–µ –º–æ–∂–Ω–æ –ø–µ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —Ñ–æ—Ç–∫–∞–º–∏ —Å –∫–æ–ª–ª–µ–≥–∞–º–∏ –∏ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è? "
            "**(—ç—Ç–æ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ –Ω–∞—à–∏—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∫–∞–Ω–∞–ª–æ–≤, –Ω–µ –Ω–µ–ª—å–∑—è–≥—Ä–∞–º–º üòÇ)"
        )
    return DAY_3[19]


async def block_20(update: Update, context: ContextTypes.DEFAULT_TYPE):
    response = update.message.text

    if re.search(r"\bOfftop Timepad\b", response, re.IGNORECASE):
        context.user_data['test_score'] += 1
        chat_id = update.effective_chat.id
        user = await get_user_by_chat_id(chat_id)
        user.timepad += 1
        await save_user(user)
        await update.message.reply_text("–í–µ—Ä–Ω–æ! + 1 —Ç–∞–π–º–ø–∞–¥–∏–∫")
        await update.message.reply_text(
            "–ò —Ñ–∏–Ω–∞–ª–Ω—ã–π - –ø—è—Ç—ã–π –≤–æ–ø—Ä–æ—Å, **–∫–∞–∫ –∑–æ–≤—É—Ç –ø–æ–º–æ—â–Ω–∏—Ü—É –¢–∞–π–º–ø–∞–¥—Ä–µ—Å –±–æ—Ç–∞?**"
        )
    else:
        await update.message.reply_text("–ü—Ä–∞–≤–∏–ª—å–Ω–æ - Offtop Timepad, —Å–∫–æ—Ä–µ–µ –∫–∏–¥–∞–π —Ç—É–¥–∞ —Å–≤–æ—é —Ñ–æ—Ç–∫—É üì∏")
        await update.message.reply_text(
            "–ò —Ñ–∏–Ω–∞–ª–Ω—ã–π - –ø—è—Ç—ã–π –≤–æ–ø—Ä–æ—Å, **–∫–∞–∫ –∑–æ–≤—É—Ç –ø–æ–º–æ—â–Ω–∏—Ü—É –¢–∞–π–º–ø–∞–¥—Ä–µ—Å –±–æ—Ç–∞?**"
        )
    return DAY_3[20]


async def block_21(update: Update, context: ContextTypes.DEFAULT_TYPE):
    response = update.message.text
    button = "–¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω üìã"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )

    if re.search(r"\b–¢–∞–π–º–∏–∫–∞\b", response, re.IGNORECASE):
        context.user_data['test_score'] += 1
        chat_id = update.effective_chat.id
        user = await get_user_by_chat_id(chat_id)
        user.timepad += 1
        await save_user(user)
        await update.message.reply_text(
            "–í–µ—Ä–Ω–æ! + 1 —Ç–∞–π–º–ø–∞–¥–∏–∫",
            reply_markup=keyboard
        )
    else:
        await update.message.reply_text(
            "–ö–∞–∫ –∂–µ —Ç—ã –∑–∞–±—ã–ª –∏–º—è –Ω–∞—à–µ–π –¥–æ—Ä–æ–≥–æ–π –¢–∞–π–º–∏–∫–∏ ü•∫",
            reply_markup=keyboard
        )

    return DAY_3[21]


async def block_22(update: Update, context: ContextTypes.DEFAULT_TYPE):
    test_score = context.user_data.get('test_score', 0)
    text = (
        "–¢—ã –º–æ–ª–æ–¥–µ—Ü! –õ–æ–≤–∏ –µ—â–µ –∑–∞—Å–ª—É–∂–µ–Ω–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É!"
    )
    button = "–•–æ—Ä–æ—à–æ, —Å–¥–µ–ª–∞—éüí™"
    keyboard = ReplyKeyboardMarkup(
            [[button]],
            resize_keyboard=True,
            one_time_keyboard=True
    )
    remove_button = ReplyKeyboardRemove()

    if test_score == 1:
        image_url = "https://disk.yandex.ru/i/sLgJsP-BUHEBBA"
    elif test_score == 2:
        image_url = "https://disk.yandex.ru/i/iYuvVWAoxkaYCQ"
    elif test_score == 3:
        image_url = "https://disk.yandex.ru/i/QZ_B6-N5P-aWiw"
    elif test_score == 4:
        image_url = "https://disk.yandex.ru/i/QonQ3L8CPexhWA"
    elif test_score >= 5:
        image_url = "https://disk.yandex.ru/i/nocYHnbfjMJY3Q"
    else:
        await update.message.reply_text(
            "–≠—Ç–æ –±—ã–ª–∞ —Ö–æ—Ä–æ—à–∞—è –ø–æ–ø—ã—Ç–∫–∞! –í–æ–∑–º–æ–∂–Ω–æ, —Ç–µ–±–µ —Å—Ç–æ–∏—Ç –µ—â–µ —Ä–∞–∑ –ø–µ—Ä–µ—á–∏—Ç–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, "
            "–æ–Ω–∞ —Ç–µ–±–µ —Ç–æ—á–Ω–æ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–±–æ—Ç–µ!",
            reply_markup=keyboard
        )
        return DAY_3[22]

    await update.message.reply_photo(
        photo=image_url,
        caption=text,
        reply_markup=keyboard
    )
    return DAY_3[22]


async def block_23(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ù–∞ —Å–µ–≥–æ–¥–Ω—è —ç—Ç–æ –≤—Å–µ! –í—Å—Ç—Ä–µ—Ç–∏–º—Å—è –∑–∞–≤—Ç—Ä–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏–º! –ß–∞–æ üñê"
    )
    button = ReplyKeyboardRemove()

    await update.message.reply_text(
        text=text,
        reply_markup=button
    )
    await day_3.block_0(update, context)
    return DAY_4[0]





