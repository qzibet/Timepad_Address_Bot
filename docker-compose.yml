services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_bot
    command: python manage.py run_bot
    volumes:
      - .:/app
    env_file:
      - .env
      - .env.example
    depends_on:
      - database
    extra_hosts:
      - "host.docker.internal:host-gateway"


  admin:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: admin
    entrypoint: ["./entrypoint.sh"]
    volumes:
      - .:/app
      - static_volume:/app/static
    env_file:
      - .env
      - .env.example
    depends_on:
      - database
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "80:80"
    command: [ "gunicorn", "--bind", "0.0.0.0:80", "main.wsgi:application" ]


  database:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file:
      - .env
      - .env.example
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql

    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$DB_USER -d $$DB_NAME"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8000:8000"
    depends_on:
      - admin
      - database
    volumes:
      - /Users/abc/Documents/tg_hr_bot/nginx/nginx.conf:/etc/nginx/nginx.conf


volumes:
  postgres_data:
  static_volume:
